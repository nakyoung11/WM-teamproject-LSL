CREATE TABLE t_user (
	i_user int UNSIGNED auto_increment primary key,
    user_email varchar(30) unique not null, -- 이메일 겸 아이디
    nickname varchar(20) unique not null, -- 닉네임
    user_pw varchar(70) not null, -- 로그인 비밀번호
    user_year varchar(4) not null, -- 년
    user_month varchar(2) not null, -- 월
    user_date varchar(2) not null, -- 일
    news varchar(1) default 0 not null, -- 소식여부
    profile_img varchar(50), -- 프로필 이미지
    r_dt datetime default now(), -- 등록 시간
    m_dt datetime default now() -- 수정 시간
);

CREATE TABLE t_work (
	i_work INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	i_user int UNSIGNED NOT NULL,
	i_show int UNSIGNED NOT NULL,
	work_images VARCHAR(200) NOT NULL,	-- 작품 파일명
	work_title VARCHAR(50) NOT NULL,	-- 작품명
	work_ctnt VARCHAR(1000) NOT NULL,	-- 작품내용
	r_dt DATETIME DEFAULT NOW(),		-- 등록날짜
   m_dt DATETIME DEFAULT NOW(),			-- 수정날짜
   CONSTRAINT work_fk_1 FOREIGN KEY (i_user) REFERENCES t_user(i_user)	--유저가 없어지면 따라 없어지게끔
   ON DELETE CASCADE
   ON UPDATE CASCADE,
   CONSTRAINT work_fk_2 FOREIGN KEY (i_show) REFERENCES t_show(i_show)	-- 전시회가 없어지면 따라 없어지게끔
   ON DELETE CASCADE
   ON UPDATE CASCADE
);

CREATE TABLE t_show (
i_show INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
i_user INT UNSIGNED,
show_poster VARCHAR(50) NOT NULL,	-- 전시회 포스터 파일명
show_title VARCHAR(30) NOT NULL,	-- 전시회명
show_ctnt VARCHAR(1000) NOT NULL,	--전시회 내용
r_dt DATETIME DEFAULT NOW() NOT NULL,	-- 전시회 등록 일자
CONSTRAINT show_fk_1 FOREIGN KEY (i_user) REFERENCES t_user(i_user)	-- 등록한 유저와 연결
);

CREATE TABLE t_show_list (
i_show_list INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,	
i_show INT UNSIGNED NOT NULL,
i_work INT UNSIGNED NOT NULL,

CONSTRAINT show_list_fk_1 FOREIGN KEY (i_show) REFERENCES t_show(i_show)	-- 전시회가 삭제 되면 같이 삭제 되게끔
   ON DELETE CASCADE
   ON UPDATE CASCADE
);

CREATE TABLE t_work_like (
i_work INT UNSIGNED NOT NULL,
i_user INT UNSIGNED NOT NULL,
PRIMARY KEY(i_work, i_user), 

CONSTRAINT work_like_fk_1 FOREIGN KEY (i_work) REFERENCES t_work(i_work) -- 작품이 삭제 되면 같이 삭제 되게끔
   ON DELETE CASCADE
   ON UPDATE CASCADE
);

CREATE TABLE t_work_cmt (
i_work_cmt INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
i_work INT UNSIGNED NOT NULL,
i_user INT UNSIGNED NOT NULL,
cmt VARCHAR(1000) NOT NULL,	-- 댓글내용
r_dt DATETIME DEFAULT NOW(),

CONSTRAINT work_cmt_fk_1 FOREIGN KEY (i_work) REFERENCES t_work(i_work)	-- 작품이 삭제되면 같이 삭제 되게끔
   ON DELETE CASCADE
   ON UPDATE CASCADE
);

create table t_notice(
    i_notice int UNSIGNED auto_increment primary key,
    title varchar(100) not null,
    ctnt varchar(2000) not null,
    i_user int UNSIGNED not null,
    r_dt datetime DEFAULT now(),
    m_dt datetime DEFAULT now(),
    FOREIGN key(i_user) REFERENCES t_user(i_user)
);
